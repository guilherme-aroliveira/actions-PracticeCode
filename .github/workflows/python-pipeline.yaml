name: Pipeline

on: workflow_dispatch

env:
  APPLICATION_NAME: app2

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python environment
        uses: actions/setup-python@v1

      - name: Install requirements
        run: pip install --quiet --requirement ./python-webb-app/requirements.txt

      - name: Lint code
        run: |
          flake8 --igonre=E501,E231 *.py
          pylint --disable=C0301 --disable=C0326 *.py

      - name: Run unit tests
        run: |
          python -m unittest --versbose --failtast

  build_image:
    needs: lint
    runs-on: ubuntu-18.04
    steps: 
      - uses: actions/checkout@v3
      - name: Set up GCloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: latest
      - run: |
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud config set run/region ${{ secrets.GCP_REGION }}
          gcloud auth configure-docker
          gcloud info

      - name: Build and tag image
        run: docker build -t "gcr.io/${{ secrets.GCP_PROJECT_ID }}//${{ env.APPLICATION_NAME }}:latest"

      - name: Push to GCP image repository
        run: docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}//${{ env.APPLICATION_NAME }}:latest

  test_image:
    needs: build_image
    runs-on: ubuntu-18.04
    steps:
      - name: Set up GCloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: latest
      - run: |
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud config set run/region ${{ secrets.GCP_REGION }}
          gcloud auth configure-docker
          gcloud info
      
      - name: Run unit tests in container
        run: docker run "gcr.io/${{ secrets.GCP_PROJECT_ID }}//${{ env.APPLICATION_NAME }}:latest" -m unittest --verbose --failtast

  deploy:
    needs: test_image
    runs-on: ubuntu-18.04
    steps:
      - name: Set up GCloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: latest
      - run: |
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud config set run/region ${{ secrets.GCP_REGION }}
          gcloud info
      
      - name: Deploy to Cloud Run
        run: gcloud run deploy gcr.io/${{ env.APPLICATION_NAME }} --image=gcr.io/${{ secrets.GCP_PROJECT_ID }}//${{ env.APPLICATION_NAME }}:latest --platform=managed --allow-unauthenticated

      - name: Test deployment
        run: |
          DEPLOY_URL=$(gcloud run services describe app2 --platform=managed --region=us-central1 | grep https)
          curl -sL --max-time 300 -o /dev/null -w "%{http_code}" $DEPLOY_URL | grep 200 || exit 1